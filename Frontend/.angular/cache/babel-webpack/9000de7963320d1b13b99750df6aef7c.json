{"ast":null,"code":"import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, fromEvent, of, merge, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token for the MatInkBar's Positioner. */\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"nextPaginator\"];\nconst _c6 = [\"previousPaginator\"];\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(1);\n\n      return ctx_r11._handleClick(tab_r4, _r0, i_r5);\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const i_r5 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13._tabFocusChanged($event, i_r5);\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    i0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18._setTabBodyWrapperHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    i0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    i0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n  }\n}\n\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\n\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n\n\nclass MatInkBar {\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n\n\n  alignToElement(element) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n  /** Shows the ink bar. */\n\n\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /** Hides the ink bar. */\n\n\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n\n\n  _setStyles(element) {\n    const positions = this._inkBarPositioner(element);\n\n    const inkBar = this._elementRef.nativeElement;\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n\n}\n\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatInkBar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\nclass MatTabContent {\n  constructor(\n  /** Content for the tab. */\n  template) {\n    this.template = template;\n  }\n\n}\n\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nMatTabContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_CONTENT,\n    useExisting: MatTabContent\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\n\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\n\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n\n}\n\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n  return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n};\n\nMatTabLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_LABEL,\n    useExisting: MatTabLabel\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to MatTab.\n\n/** @docs-private */\n\n\nconst _MatTabBase = mixinDisabled(class {});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\n\n\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\n\nclass MatTab extends _MatTabBase {\n  constructor(_viewContainerRef, _closestTabGroup) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** Plain text label for the tab, used when there is no template label. */\n\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n\n    this.isActive = false;\n  }\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n\n\n  get templateLabel() {\n    return this._templateLabel;\n  }\n\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n\n\n  get content() {\n    return this._contentPortal;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n\n\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n\n}\n\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n};\n\nMatTab.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"]\n  },\n  exportAs: [\"matTab\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB,\n    useExisting: MatTab\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      inputs: ['disabled'],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB_GROUP]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    templateLabel: [{\n      type: ContentChild,\n      args: [MAT_TAB_LABEL]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MAT_TAB_CONTENT, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\n\n\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [// Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n  /** Clean up centering subscription. */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._centeringSub.unsubscribe();\n\n    this._leavingSub.unsubscribe();\n  }\n\n}\n\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatTabBodyPortal.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatTabBody)]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n\n\nclass _MatTabBodyBase {\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n\n    this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n    /** Duration for the tab's animation. */\n\n    this.animationDuration = '500ms';\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n\n        changeDetectorRef.markForCheck();\n      });\n    } // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n\n\n  set position(position) {\n    this._positionIndex = position;\n\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n\n\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n\n    this._beforeCentering.emit(isCentering);\n\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n\n\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n\n\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n\n\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n\n}\n\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n  return new (t || _MatTabBodyBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\n_MatTabBodyBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabBodyBase,\n  inputs: {\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\",\n    animationDuration: \"animationDuration\",\n    position: \"position\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabBodyBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n\n\nclass MatTabBody extends _MatTabBodyBase {\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n\n}\n\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMatTabBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c2, ctx._position, i0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  directives: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to provide the default options the tabs module. */\n\n\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG'); // Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/** @docs-private */\n\nconst _MatTabLabelWrapperBase = mixinDisabled(class {});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n\n\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /** Sets focus on the wrapper element */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n}\n\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nMatTabLabelWrapper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Config used to bind passive event listeners */\n\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\n\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\n\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\n\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n\nclass MatPaginatedTabHeader {\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n\n    this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n\n    const resize = this._viewportRuler.change(150);\n\n    const realign = () => {\n      this.updatePagination();\n\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n\n    this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n\n\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => Promise.resolve().then(realign));\n\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n\n\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n\n      this._checkScrollingControls();\n\n      this._alignInkBarToSelectedTab();\n\n      this._selectedIndexChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n\n\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n\n      this._scrollDistanceChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n\n\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n\n          this._itemSelected(event);\n        }\n\n        break;\n\n      default:\n        this._keyManager.onKeydown(event);\n\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n\n\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n\n      this._ngZone.run(() => {\n        this.updatePagination();\n\n        this._alignInkBarToSelectedTab();\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n\n\n  updatePagination() {\n    this._checkPaginationEnabled();\n\n    this._checkScrollingControls();\n\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n\n\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n\n\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n\n\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n\n\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n\n\n      const containerEl = this._tabListContainer.nativeElement;\n\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\n\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`; // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\n\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n\n\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    } // The view length is the visible width of the tab labels.\n\n\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n\n\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n\n\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n\n\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    } // Avoid overlapping timers.\n\n\n    this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction); // Stop the timer if we've reached the start or the end.\n\n\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n\n\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n\n    this._scrollDistanceChanged = true;\n\n    this._checkScrollingControls();\n\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n\n}\n\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n  return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPaginatedTabHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatPaginatedTabHeader,\n  inputs: {\n    disablePagination: \"disablePagination\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disablePagination: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n\n\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n\n}\n\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n  return new (t || _MatTabHeaderBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabHeaderBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabHeaderBase,\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n\n\nclass MatTabHeader extends _MatTabHeaderBase {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n}\n\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabHeader.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 8,\n  consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵprojection(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 8, 9);\n      i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(12, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      inputs: ['selectedIndex'],\n      outputs: ['selectFocusedIndex', 'indexFocused'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID's for each tab component */\n\n\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\n\nclass MatTabChangeEvent {} // Boilerplate for applying mixins to MatTabGroup.\n\n/** @docs-private */\n\n\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n\n\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n\n    this._indexToSelect = 0;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n\n    this.headerPosition = 'above';\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n  }\n  /** Whether the tab group should grow to the size of the active tab. */\n\n\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n\n\n  get animationDuration() {\n    return this._animationDuration;\n  }\n\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n\n\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n\n  set contentTabIndex(value) {\n    this._contentTabIndex = coerceNumberProperty(value, null);\n  }\n  /** Background color of the tab group. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect)); // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      } // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n\n\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect); // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n\n    this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n\n\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n\n\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n\n\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n\n      this._tabs.notifyOnChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n\n    this._tabsSubscription.unsubscribe();\n\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n\n\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n\n\n  focusTab(index) {\n    const header = this._tabHeader;\n\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n\n  _focusChanged(index) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n\n\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n\n\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n\n\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n\n\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n\n\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n\n\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n\n\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n\n\n  _getTabIndex(tab, idx) {\n    if (tab.disabled) {\n      return null;\n    }\n\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n\n\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n\n}\n\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n  return new (t || _MatTabGroupBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabGroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabGroupBase,\n  inputs: {\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    contentTabIndex: \"contentTabIndex\",\n    disablePagination: \"disablePagination\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabGroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input\n    }],\n    disablePagination: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nclass MatTabGroup extends _MatTabGroupBase {\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n\n}\n\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 7,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      i0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  directives: [MatTabHeader, i3$1.NgForOf, MatTabLabelWrapper, i4.MatRipple, i7.CdkMonitorFocus, i3$1.NgIf, i7$1.CdkPortalOutlet, MatTabBody],\n  styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n      styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n\n\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /** Theme color of the nav bar. */\n\n    this.color = 'primary';\n  }\n  /** Background color of the tab nav. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected() {// noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n\n\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n\n        this._changeDetectorRef.markForCheck();\n\n        return;\n      }\n    } // The ink bar should hide itself if no items are active.\n\n\n    this.selectedIndex = -1;\n\n    this._inkBar.hide();\n  }\n\n}\n\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n  return new (t || _MatTabNavBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabNavBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabNavBase,\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    disableRipple: \"disableRipple\",\n    color: \"color\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabNavBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nclass MatTabNav extends _MatTabNavBase {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n}\n\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabNav.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n  hostVars: 10,\n  hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  attrs: _c9,\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 8,\n  consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵprojection(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 8, 9);\n      i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(12, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color'],\n      host: {\n        'class': 'mat-tab-nav-bar mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {})));\n/** Base class with all of the `MatTabLink` functionality. */\n\n\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  constructor(_tabNavBar,\n  /** @docs-private */\n  elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /** Whether the tab link is active or not. */\n\n    this._isActive = false;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /** Whether the link is active. */\n\n\n  get active() {\n    return this._isActive;\n  }\n\n  set active(value) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._isActive) {\n      this._isActive = value;\n\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Focuses the tab link. */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n\n}\n\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n  return new (t || _MatTabLinkBase)(i0.ɵɵdirectiveInject(_MatTabNavBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabLinkBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabLinkBase,\n  inputs: {\n    active: \"active\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabLinkBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: _MatTabNavBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    active: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nclass MatTabLink extends _MatTabLinkBase {\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n\n}\n\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabLink.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n  hostVars: 7,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link mat-focus-indicator',\n        '[attr.aria-current]': 'active ? \"page\" : null',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active',\n        '(focus)': '_handleFocus()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatTabsModule {}\n\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n  return new (t || MatTabsModule)();\n};\n\nMatTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };","map":{"version":3,"sources":["/Users/saraheldah/Desktop/cinematic-frontend/node_modules/@angular/material/fesm2020/tabs.mjs"],"names":["i7","FocusKeyManager","A11yModule","i5","ObserversModule","i7$1","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","i3$1","DOCUMENT","CommonModule","i0","InjectionToken","Directive","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChild","ViewChild","Input","forwardRef","EventEmitter","Output","ContentChildren","QueryList","Attribute","NgModule","i4","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","Subject","Subscription","fromEvent","of","merge","timer","i1","trigger","state","style","transition","animate","startWith","distinctUntilChanged","takeUntil","coerceNumberProperty","coerceBooleanProperty","i1$1","i3","normalizePassiveListenerOptions","hasModifierKey","SPACE","ENTER","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","hide","positions","inkBar","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","host","undefined","decorators","MAT_TAB_CONTENT","MatTabContent","template","provide","useExisting","providers","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","templateRef","viewContainerRef","_closestTab","ViewContainerRef","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","textLabel","_contentPortal","_stateChanges","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","ɵcmp","inputs","changeDetection","Default","encapsulation","None","exportAs","read","static","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","Directionality","ChangeDetectorRef","elementRef","animations","styles","_portalHost","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","_stopInterval","selectedIndex","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","Promise","resolve","then","newFocusIndex","_setTabFocus","ngAfterContentChecked","_tabLabelCount","length","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","Math","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","max","min","ViewportRuler","Platform","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","preventDefault","MatTabHeader","MatRipple","CdkObserveContent","outputs","descendants","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_tabs","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","forEach","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","idx","_tabFocusChanged","focusOrigin","MatTabGroup","NgForOf","CdkMonitorFocus","NgIf","_MatTabNavBase","color","updateActiveLink","items","active","MatTabNav","MatTabLink","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","FocusMonitor","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, fromEvent, of, merge, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatTabLinkBase, inputs: { active: \"active\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\" }, properties: { \"attr.aria-current\": \"active ? \\\"page\\\" : null\", \"attr.aria-disabled\": \"disabled\", \"attr.tabIndex\": \"tabIndex\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-current]': 'active ? \"page\" : null',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"]},"metadata":{},"sourceType":"module"}